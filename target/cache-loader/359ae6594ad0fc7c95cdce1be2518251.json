{"remainingRequest":"C:\\Users\\alaae\\Desktop\\Jhipster\\Jhipster_react\\jhipster-frontend\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\alaae\\Desktop\\Jhipster\\Jhipster_react\\jhipster-frontend\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\alaae\\Desktop\\Jhipster\\Jhipster_react\\jhipster-frontend\\node_modules\\eslint-loader\\dist\\cjs.js!C:\\Users\\alaae\\Desktop\\Jhipster\\Jhipster_react\\jhipster-frontend\\src\\main\\webapp\\app\\modules\\account\\password-reset\\password-reset.reducer.ts","dependencies":[{"path":"C:\\Users\\alaae\\Desktop\\Jhipster\\Jhipster_react\\jhipster-frontend\\src\\main\\webapp\\app\\modules\\account\\password-reset\\password-reset.reducer.ts","mtime":1587243116659},{"path":"C:\\Users\\alaae\\Desktop\\Jhipster\\Jhipster_react\\jhipster-frontend\\node_modules\\react-hot-loader\\webpack.js","mtime":499162500000},{"path":"C:\\Users\\alaae\\Desktop\\Jhipster\\Jhipster_react\\jhipster-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\alaae\\Desktop\\Jhipster\\Jhipster_react\\jhipster-frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\alaae\\Desktop\\Jhipster\\Jhipster_react\\jhipster-frontend\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\alaae\\Desktop\\Jhipster\\Jhipster_react\\jhipster-frontend\\node_modules\\eslint-loader\\dist\\cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsNCmltcG9ydCB7IHRyYW5zbGF0ZSB9IGZyb20gJ3JlYWN0LWpoaXBzdGVyJzsNCmltcG9ydCB7IFJFUVVFU1QsIFNVQ0NFU1MsIEZBSUxVUkUgfSBmcm9tICdhcHAvc2hhcmVkL3JlZHVjZXJzL2FjdGlvbi10eXBlLnV0aWwnOw0KZXhwb3J0IGNvbnN0IEFDVElPTl9UWVBFUyA9IHsNCiAgICBSRVNFVF9QQVNTV09SRF9JTklUOiAncGFzc3dvcmRSZXNldC9SRVNFVF9QQVNTV09SRF9JTklUJywNCiAgICBSRVNFVF9QQVNTV09SRF9GSU5JU0g6ICdwYXNzd29yZFJlc2V0L1JFU0VUX1BBU1NXT1JEX0ZJTklTSCcsDQogICAgUkVTRVQ6ICdwYXNzd29yZFJlc2V0L1JFU0VUJw0KfTsNCmNvbnN0IGluaXRpYWxTdGF0ZSA9IHsNCiAgICBsb2FkaW5nOiBmYWxzZSwNCiAgICByZXNldFBhc3N3b3JkU3VjY2VzczogZmFsc2UsDQogICAgcmVzZXRQYXNzd29yZEZhaWx1cmU6IGZhbHNlDQp9Ow0KLy8gUmVkdWNlcg0KZXhwb3J0IGRlZmF1bHQgKHN0YXRlID0gaW5pdGlhbFN0YXRlLCBhY3Rpb24pID0+IHsNCiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7DQogICAgICAgIGNhc2UgUkVRVUVTVChBQ1RJT05fVFlQRVMuUkVTRVRfUEFTU1dPUkRfRklOSVNIKToNCiAgICAgICAgY2FzZSBSRVFVRVNUKEFDVElPTl9UWVBFUy5SRVNFVF9QQVNTV09SRF9JTklUKToNCiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHN0YXRlKSwgeyBsb2FkaW5nOiB0cnVlIH0pOw0KICAgICAgICBjYXNlIEZBSUxVUkUoQUNUSU9OX1RZUEVTLlJFU0VUX1BBU1NXT1JEX0ZJTklTSCk6DQogICAgICAgIGNhc2UgRkFJTFVSRShBQ1RJT05fVFlQRVMuUkVTRVRfUEFTU1dPUkRfSU5JVCk6DQogICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBpbml0aWFsU3RhdGUpLCB7IGxvYWRpbmc6IGZhbHNlLCByZXNldFBhc3N3b3JkRmFpbHVyZTogdHJ1ZSB9KTsNCiAgICAgICAgY2FzZSBTVUNDRVNTKEFDVElPTl9UWVBFUy5SRVNFVF9QQVNTV09SRF9GSU5JU0gpOg0KICAgICAgICBjYXNlIFNVQ0NFU1MoQUNUSU9OX1RZUEVTLlJFU0VUX1BBU1NXT1JEX0lOSVQpOg0KICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgaW5pdGlhbFN0YXRlKSwgeyBsb2FkaW5nOiBmYWxzZSwgcmVzZXRQYXNzd29yZFN1Y2Nlc3M6IHRydWUgfSk7DQogICAgICAgIGNhc2UgQUNUSU9OX1RZUEVTLlJFU0VUOg0KICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGluaXRpYWxTdGF0ZSk7DQogICAgICAgIGRlZmF1bHQ6DQogICAgICAgICAgICByZXR1cm4gc3RhdGU7DQogICAgfQ0KfTsNCmNvbnN0IGFwaVVybCA9ICdhcGkvYWNjb3VudC9yZXNldC1wYXNzd29yZCc7DQovLyBBY3Rpb25zDQpleHBvcnQgY29uc3QgaGFuZGxlUGFzc3dvcmRSZXNldEluaXQgPSBtYWlsID0+ICh7DQogICAgdHlwZTogQUNUSU9OX1RZUEVTLlJFU0VUX1BBU1NXT1JEX0lOSVQsDQogICAgLy8gSWYgdGhlIGNvbnRlbnQtdHlwZSBpc24ndCBzZXQgdGhhdCB3YXksIGF4aW9zIHdpbGwgdHJ5IHRvIGVuY29kZSB0aGUgYm9keSBhbmQgdGh1cyBtb2RpZnkgdGhlIGRhdGEgc2VudCB0byB0aGUgc2VydmVyLg0KICAgIHBheWxvYWQ6IGF4aW9zLnBvc3QoYCR7YXBpVXJsfS9pbml0YCwgbWFpbCwgeyBoZWFkZXJzOiB7IFsnQ29udGVudC1UeXBlJ106ICd0ZXh0L3BsYWluJyB9IH0pLA0KICAgIG1ldGE6IHsNCiAgICAgICAgc3VjY2Vzc01lc3NhZ2U6IHRyYW5zbGF0ZSgncmVzZXQucmVxdWVzdC5tZXNzYWdlcy5zdWNjZXNzJykNCiAgICB9DQp9KTsNCmV4cG9ydCBjb25zdCBoYW5kbGVQYXNzd29yZFJlc2V0RmluaXNoID0gKGtleSwgbmV3UGFzc3dvcmQpID0+ICh7DQogICAgdHlwZTogQUNUSU9OX1RZUEVTLlJFU0VUX1BBU1NXT1JEX0ZJTklTSCwNCiAgICBwYXlsb2FkOiBheGlvcy5wb3N0KGAke2FwaVVybH0vZmluaXNoYCwgeyBrZXksIG5ld1Bhc3N3b3JkIH0pLA0KICAgIG1ldGE6IHsNCiAgICAgICAgc3VjY2Vzc01lc3NhZ2U6IHRyYW5zbGF0ZSgncmVzZXQuZmluaXNoLm1lc3NhZ2VzLnN1Y2Nlc3MnKQ0KICAgIH0NCn0pOw0KZXhwb3J0IGNvbnN0IHJlc2V0ID0gKCkgPT4gKHsNCiAgICB0eXBlOiBBQ1RJT05fVFlQRVMuUkVTRVQNCn0pOw0K"},{"version":3,"file":"C:\\Users\\alaae\\Desktop\\Jhipster\\Jhipster_react\\jhipster-frontend\\src\\main\\webapp\\app\\modules\\account\\password-reset\\password-reset.reducer.ts","sourceRoot":"","sources":["C:\\Users\\alaae\\Desktop\\Jhipster\\Jhipster_react\\jhipster-frontend\\node_modules\\eslint-loader\\dist\\cjs.js!C:\\Users\\alaae\\Desktop\\Jhipster\\Jhipster_react\\jhipster-frontend\\src\\main\\webapp\\app\\modules\\account\\password-reset\\password-reset.reducer.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAE3C,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,sCAAsC,CAAC;AAEjF,MAAM,CAAC,MAAM,YAAY,GAAG;IAC1B,mBAAmB,EAAE,mCAAmC;IACxD,qBAAqB,EAAE,qCAAqC;IAC5D,KAAK,EAAE,qBAAqB;CAC7B,CAAC;AAEF,MAAM,YAAY,GAAG;IACnB,OAAO,EAAE,KAAK;IACd,oBAAoB,EAAE,KAAK;IAC3B,oBAAoB,EAAE,KAAK;CAC5B,CAAC;AAIF,UAAU;AACV,eAAe,CAAC,QAA4B,YAAY,EAAE,MAAM,EAAsB,EAAE;IACtF,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,OAAO,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;QACjD,KAAK,OAAO,CAAC,YAAY,CAAC,mBAAmB,CAAC;YAC5C,uCACK,KAAK,KACR,OAAO,EAAE,IAAI,IACb;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;QACjD,KAAK,OAAO,CAAC,YAAY,CAAC,mBAAmB,CAAC;YAC5C,uCACK,YAAY,KACf,OAAO,EAAE,KAAK,EACd,oBAAoB,EAAE,IAAI,IAC1B;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;QACjD,KAAK,OAAO,CAAC,YAAY,CAAC,mBAAmB,CAAC;YAC5C,uCACK,YAAY,KACf,OAAO,EAAE,KAAK,EACd,oBAAoB,EAAE,IAAI,IAC1B;QACJ,KAAK,YAAY,CAAC,KAAK;YACrB,yBACK,YAAY,EACf;QACJ;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC,CAAC;AAEF,MAAM,MAAM,GAAG,4BAA4B,CAAC;AAE5C,UAAU;AACV,MAAM,CAAC,MAAM,uBAAuB,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9C,IAAI,EAAE,YAAY,CAAC,mBAAmB;IACtC,yHAAyH;IACzH,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,OAAO,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,EAAE,CAAC,cAAc,CAAC,EAAE,YAAY,EAAE,EAAE,CAAC;IAC5F,IAAI,EAAE;QACJ,cAAc,EAAE,SAAS,CAAC,gCAAgC,CAAC;KAC5D;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,GAAG,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;IAC9D,IAAI,EAAE,YAAY,CAAC,qBAAqB;IACxC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,SAAS,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC;IAC7D,IAAI,EAAE;QACJ,cAAc,EAAE,SAAS,CAAC,+BAA+B,CAAC;KAC3D;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,CAAC;IAC1B,IAAI,EAAE,YAAY,CAAC,KAAK;CACzB,CAAC,CAAC","sourcesContent":["import axios from 'axios';\r\nimport { translate } from 'react-jhipster';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  RESET_PASSWORD_INIT: 'passwordReset/RESET_PASSWORD_INIT',\r\n  RESET_PASSWORD_FINISH: 'passwordReset/RESET_PASSWORD_FINISH',\r\n  RESET: 'passwordReset/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  resetPasswordSuccess: false,\r\n  resetPasswordFailure: false\r\n};\r\n\r\nexport type PasswordResetState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\nexport default (state: PasswordResetState = initialState, action): PasswordResetState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.RESET_PASSWORD_FINISH):\r\n    case REQUEST(ACTION_TYPES.RESET_PASSWORD_INIT):\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.RESET_PASSWORD_FINISH):\r\n    case FAILURE(ACTION_TYPES.RESET_PASSWORD_INIT):\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        resetPasswordFailure: true\r\n      };\r\n    case SUCCESS(ACTION_TYPES.RESET_PASSWORD_FINISH):\r\n    case SUCCESS(ACTION_TYPES.RESET_PASSWORD_INIT):\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        resetPasswordSuccess: true\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/account/reset-password';\r\n\r\n// Actions\r\nexport const handlePasswordResetInit = mail => ({\r\n  type: ACTION_TYPES.RESET_PASSWORD_INIT,\r\n  // If the content-type isn't set that way, axios will try to encode the body and thus modify the data sent to the server.\r\n  payload: axios.post(`${apiUrl}/init`, mail, { headers: { ['Content-Type']: 'text/plain' } }),\r\n  meta: {\r\n    successMessage: translate('reset.request.messages.success')\r\n  }\r\n});\r\n\r\nexport const handlePasswordResetFinish = (key, newPassword) => ({\r\n  type: ACTION_TYPES.RESET_PASSWORD_FINISH,\r\n  payload: axios.post(`${apiUrl}/finish`, { key, newPassword }),\r\n  meta: {\r\n    successMessage: translate('reset.finish.messages.success')\r\n  }\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n"]}]}